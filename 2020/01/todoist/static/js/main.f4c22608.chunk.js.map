{"version":3,"sources":["firebase.js","constants/index.js","helpers/index.js","context/projects-context.js","hooks/index.js","context/selected-project-context.js","components/ProjectOverlay.js","components/TaskDate.js","components/AddTask.js","components/layout/Header.js","components/IndividualProject.js","components/Projects.js","components/AddProject.js","components/layout/Sidebar.js","components/Checkbox.js","components/Tasks.js","components/layout/Content.js","index.js","App.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","collatedTasks","key","name","collatedTasksExist","selectedProject","find","task","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join","ProjectsContext","createContext","ProjectsProvider","children","useState","projects","setProjects","useEffect","firestore","collection","where","orderBy","get","then","snapshot","allProjects","docs","map","project","data","docId","JSON","stringify","useProjects","Provider","value","useProjectsValue","useContext","SelectedProjectContext","SelectedProjectProvider","setSelectedProject","useSelectedProjectValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","className","data-testid","onClick","onKeyDown","role","tabIndex","aria-label","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","moment","format","add","AddTask","showAddTaskMain","shouldShowMain","showQuickAddTask","setShowQuickAddTask","setTask","taskDate","showMain","setShowMain","selectProject","collatedDate","archived","date","userId","type","onChange","e","target","data-tesid","Header","darkMode","setDarkMode","setShouldShowMain","src","alt","IndividualProject","showConfirm","setShowConfirm","doc","delete","Projects","activeValue","active","setActive","data-doc-id","AddProject","shouldShow","show","setShow","projectName","setProjectName","placeholder","Sidebar","showProjects","setShowProjects","undefined","Checkbox","taskDesc","archiveTask","update","Tasks","tasks","setTasks","archivedTasks","setArchivedTasks","unsubscribe","onSnapshot","newTasks","filter","diff","useTasks","getCollatedTitle","length","getTitle","document","title","Content","render","darkModeDefaul","darkmode","getElementById"],"mappings":"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","file":"static/js/main.f4c22608.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDUSwnWHkvlGW9tfppp_tcfq8ncDHvJx60\",\r\n    authDomain: \"todoist-tut-6152b.firebaseapp.com\",\r\n    databaseURL: \"https://todoist-tut-6152b.firebaseio.com\",\r\n    projectId: \"todoist-tut-6152b\",\r\n    storageBucket: \"todoist-tut-6152b.appspot.com\",\r\n    messagingSenderId: \"328109841266\",\r\n    appId: \"1:328109841266:web:5e2b117ee262b5b2c3dbeb\"\r\n});\r\n\r\nexport {firebaseConfig as firebase}; \r\n","export const collatedTasks = [\r\n    {key: 'INBOX', name: 'Inbox'},\r\n    {key: 'TODAY', name: 'Today'},\r\n    {key: 'NEXT_7', name: 'Next 7 Days'},\r\n]","import { collatedTasks } from '../constants';\r\n\r\nexport const getTitle = (projects, projectId) =>\r\n    projects.find(project => project.projectId === projectId);\r\n\r\nexport const getCollatedTitle = (projects, key) =>\r\n    projects.find(project => project.key === key);\r\n\r\nexport const collatedTasksExist = selectedProject => \r\n    collatedTasks.find(task => task.key == selectedProject);\r\n\r\nexport const generatePushId = (() => {\r\n    const PUSH_CHARS = \r\n    '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n\r\n    const lastRandChars = [];\r\n\r\n    return function() {\r\n        let now = new Date().getTime();\r\n\r\n        const timeStampChars = new Array(8);\r\n        for (var i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            now = Math.floor(now / 64);\r\n        }\r\n\r\n        let id = timeStampChars.join('');\r\n\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n\r\n        return id;\r\n    };\r\n})();","import React, { createContext, useContext } from 'react';\r\nimport { useProjects } from '../hooks';\r\n\r\nexport const ProjectsContext = createContext();\r\nexport const ProjectsProvider = ({children}) => {\r\n    const { projects, setProjects } = useProjects();\r\n\r\n    return (\r\n        <ProjectsContext.Provider value={{ projects, setProjects }}>\r\n            {children}\r\n        </ProjectsContext.Provider>\r\n    );\r\n};\r\n\r\nexport const  useProjectsValue = () => useContext(ProjectsContext);\r\n\r\n","import {useState, useEffect} from 'react';\r\nimport moment from 'moment';\r\nimport { firebase } from '../firebase';\r\nimport { collatedTasksExist } from '../helpers';\r\n\r\nexport const useTasks = selectedProject => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [archivedTasks, setArchivedTasks] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n        .firestore()\r\n        .collection('tasks')\r\n        .where('userId', '==', 'aM9MoVCGrpVdGEAwmbDYZzzCd022');\r\n\r\n    unsubscribe = \r\n        selectedProject && !collatedTasksExist(selectedProject) \r\n        ? (unsubscribe = unsubscribe.where('projectId', '==', selectedProject))\r\n        : selectedProject === 'TODAY'\r\n        ? (unsubscribe = unsubscribe.where(\r\n                'date', \r\n                '==', \r\n                moment().format('DD/MM/YYYY')\r\n            ))\r\n        : selectedProject === 'INBOX' || selectedProject === 0\r\n        ? (unsubscribe = unsubscribe.where('date', '==', ''))\r\n        : unsubscribe;\r\n\r\n        unsubscribe = unsubscribe.onSnapshot(snapshot => {\r\n            const newTasks = snapshot.docs.map(task => ({\r\n                id: task.id, \r\n                ...task.data(), \r\n            }));\r\n\r\n            setTasks(\r\n                selectedProject === 'NEXT_7'\r\n                ? newTasks.filter(\r\n                    task => \r\n                        moment(task.date, 'DD-MM-YYYY').diff(moment(), 'days') <= 7 && \r\n                        task.archived !== true\r\n                ) \r\n                : newTasks.filter(task => task.archived !== true)\r\n            ); \r\n            setArchivedTasks(newTasks.filter(task => task.archived !== false));\r\n        });\r\n\r\n        return () => unsubscribe();\r\n    }, [selectedProject]);\r\n\r\n    return { tasks, archivedTasks };\r\n};\r\n\r\nexport const useProjects = () => {\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .where('userId', '==', 'aM9MoVCGrpVdGEAwmbDYZzzCd022')\r\n            .orderBy('projectId')\r\n            .get()\r\n            .then(snapshot => {\r\n                const allProjects = snapshot.docs.map(project => ({\r\n                    ...project.data(),\r\n                docId: project.id,\r\n\r\n                }));\r\n\r\n                if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\r\n                    setProjects(allProjects);\r\n                }\r\n            });\r\n    }, [projects]);\r\n\r\n    return { projects, setProjects };\r\n};\r\n","import React, { createContext, useContext, useState } from 'react';\r\n\r\nexport const SelectedProjectContext = createContext();\r\nexport const SelectedProjectProvider = ({children}) => {\r\n    const [ selectedProject, setSelectedProject ] = useState('INBOX');\r\n\r\n    return (\r\n        <SelectedProjectContext.Provider \r\n        value={{ selectedProject, setSelectedProject }}>\r\n            {children}\r\n        </SelectedProjectContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useProjectsValue } from '../context';\r\n\r\nexport const ProjectOverlay = ({\r\n    setProject, \r\n    showProjectOverlay,  \r\n    setShowProjectOverlay\r\n}) => {\r\n    const { projects } = useProjectsValue();\r\n\r\n    return (\r\n        projects && \r\n        showProjectOverlay && (\r\n            <div\r\n                className=\"project-overlay\"\r\n                data-testid=\"project-overlay\"\r\n            >\r\n                <ul className=\"project-overlay__list\">\r\n                    {projects.map(project => (\r\n                        <li key={project.projectId}>\r\n                            <div\r\n                                data-testid=\"project-overlay-action\"\r\n                                onClick={() => {\r\n                                    setProject(project.projectId);\r\n                                    setShowProjectOverlay(false);\r\n                                }}\r\n                                onKeyDown={() => {\r\n                                    setProject(project.projectId);\r\n                                    setShowProjectOverlay(false);\r\n                                }}\r\n                                role=\"button\"\r\n                                tabIndex={0}\r\n                                aria-label=\"Select the task project\"\r\n                            >\r\n                                {project.name}\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\nProjectOverlay.propTypes = {\r\n    projects: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport {FaSpaceShuttle, FaSun, FaRegPaperPlane} from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TaskDate = ({ setTaskDate, showTaskDate, setShowTaskDate }) => \r\nshowTaskDate && (\r\n    <div \r\n        className=\"task-date\"\r\n        data-testid=\"task-date-overlay\"\r\n    >\r\n        <ul className=\"task-date__list\">\r\n            <li>   \r\n                <div\r\n                    onClick={() => {\r\n                        setShowTaskDate(false);\r\n                        setTaskDate(moment().format('DD/MM/YYYY'));\r\n                    }}\r\n                    onKeyDown={() => {\r\n                        setShowTaskDate(false);\r\n                        setTaskDate(moment().format('DD/MM/YYYY'));\r\n                    }}  \r\n                    data-testid=\"task-date-overlay\"\r\n                    tabIndex={0}\r\n                    aria-label=\"Select today as the task date\"\r\n                    role=\"button\"\r\n                >\r\n                    <span>\r\n                        <FaSpaceShuttle />\r\n                    </span>\r\n                    <span>Today</span>\r\n                </div>\r\n            </li>\r\n            <li>   \r\n                <div\r\n                    onClick={() => {\r\n                        setShowTaskDate(false);\r\n                        setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\r\n                    }} \r\n                    onKeyDown={() => {\r\n                        setShowTaskDate(false);\r\n                        setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\r\n                    }} \r\n                    data-testid=\"task-date-tomorrow\"\r\n                    tabIndex={0}\r\n                    aria-label=\"Select tomorrow as the task date\"\r\n                    role=\"button\"\r\n                >\r\n                <span>\r\n                    <FaSun />\r\n                </span>\r\n                <span>Tomorrow</span>\r\n                </div>\r\n            </li>\r\n            <li>\r\n                <div\r\n                    onClick={() => {\r\n                        setShowTaskDate(false);\r\n                        setTaskDate(moment()\r\n                        .add(7, 'days')\r\n                        .format('DD/MM/YYYY')\r\n                        );\r\n                    }} \r\n                    onKeyDown={() => {\r\n                        setShowTaskDate(false);\r\n                        setTaskDate(moment()\r\n                        .add(7, 'days')\r\n                        .format('DD/MM/YYYY')\r\n                        );\r\n                    }} \r\n                    data-testid=\"task-date-next-week\"\r\n                    tabIndex={0}\r\n                    aria-label=\"Select next week as the task date\"\r\n                    role=\"button\"\r\n                    >\r\n                    <span>\r\n                        <FaRegPaperPlane />\r\n                    </span>\r\n                    <span>Next week</span>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nTaskDate.propTypes = {\r\n    setTaskDate: PropTypes.func.isRequired,\r\n    showTaskDate: PropTypes.bool.isRequired,\r\n    setShowTaskDate: PropTypes.func.isRequired,\r\n};","import React, { useState } from 'react';\r\nimport { FaRegListAlt, FaRegCalendarAlt} from 'react-icons/fa';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport {firebase} from '../firebase';\r\nimport { useSelectedProjectValue } from '../context';\r\nimport { ProjectOverlay } from './ProjectOverlay';\r\nimport { TaskDate } from './TaskDate';\r\n\r\nexport const AddTask = ({\r\n    showAddTaskMain = true,\r\n    shouldShowMain = false,\r\n    showQuickAddTask,\r\n    setShowQuickAddTask,\r\n}) => {\r\n    const [task, setTask] = useState('');\r\n    const [taskDate, setTaskDate] = useState('');\r\n    const [project, setProject] = useState('');\r\n    const [showMain, setShowMain] = useState(shouldShowMain);\r\n    const [showProjectOverlay, setShowProjectOverlay] = useState(false);\r\n    const [showTaskDate, setShowTaskDate] = useState(false);\r\n\r\n    const { selectProject } = useSelectedProjectValue();\r\n\r\n    const AddTask = () => {\r\n        const projectId = project || selectProject;\r\n        let collatedDate = '';\r\n\r\n        if (projectId === 'TODAY') {\r\n            collatedDate = moment().format('DD/MM/YYYY');\r\n        } else if (projectId === 'NEXT_7') {\r\n            collatedDate = moment()\r\n                .add(7, 'days')\r\n                .format('DD/MM/YYYY')\r\n        }\r\n\r\n        return (\r\n            task && \r\n            projectId && \r\n            firebase\r\n                .firestore()\r\n                .collection('tasks')\r\n                .add({\r\n                    archived: false,\r\n                    projectId,\r\n                    task,\r\n                    date: collatedDate || taskDate,\r\n                    userId: 'aM9MoVCGrpVdGEAwmbDYZzzCd022'\r\n                })\r\n                .then(() => {\r\n                    setTask('');\r\n                    setProject('');\r\n                    setShowMain('');\r\n                    setShowProjectOverlay(false);\r\n            })\r\n        );\r\n    };\r\n    \r\n    return (\r\n        <div \r\n            className={showQuickAddTask ? \r\n                'add-task add-task__overlay' :\r\n                'add-task'\r\n            }\r\n            data-testid=\"add-task-comp\"\r\n        >\r\n            {showAddTaskMain && (\r\n            <div\r\n                className=\"add-task__shallow\" \r\n                data-testid=\"show-main-action\"\r\n                aria-label=\"Add task\"\r\n                onClick={() => setShowMain(!showMain)}\r\n                onKeyDown={() => setShowMain(!showMain)}\r\n                tabIndex={0}\r\n                role=\"button\"\r\n            >\r\n                <span className=\"add-task__plus\">+</span>\r\n                <span className=\"add-task__text\">Add Task</span>\r\n            </div>\r\n            )}\r\n\r\n            {(showMain || showQuickAddTask) && (\r\n                <div \r\n                    className=\"add-task__main\" \r\n                    data-testid=\"add-task-main\"\r\n                >\r\n                    {showQuickAddTask && (\r\n                        <>\r\n                            <div data-testid=\"quick-add-task\">\r\n                                <h2 className=\"header\">Quick Add Task</h2>\r\n                                <span \r\n                                    className=\"add-task__cancel-x\"\r\n                                    data-testid=\"add-task-quick-cancel\"\r\n                                    onClick={() => {\r\n                                        setShowMain(false);\r\n                                        setShowProjectOverlay(false);\r\n                                        setShowQuickAddTask(false);\r\n                                    }}\r\n                                    onKeyDown={() => {\r\n                                        setShowMain(false);\r\n                                        setShowProjectOverlay(false);\r\n                                        setShowQuickAddTask(false);\r\n                                    }}\r\n                                    tabIndex={0}\r\n                                    role=\"button\"\r\n                                    aria-label=\"Cancel adding task\"\r\n                                >\r\n                                    X\r\n                                </span>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    <ProjectOverlay \r\n                        setProject={setProject} \r\n                        showProjectOverlay={showProjectOverlay} \r\n                        setShowProjectOverlay={setShowProjectOverlay}\r\n                    />\r\n                    <TaskDate \r\n                        setTaskDate={setTaskDate}\r\n                        showTaskDate={showTaskDate}\r\n                        setShowTaskDate={setShowTaskDate}\r\n                    />\r\n                    <input \r\n                        className=\"add-task__content\"\r\n                        aria-label=\"Enter your task\"\r\n                        data-testid=\"add-task-content\"\r\n                        type=\"text\"\r\n                        value={task}\r\n                        onChange={e => setTask(e.target.value)}\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"add-task__submit\"\r\n                        data-testid=\"add-task\"\r\n                        onClick={() => \r\n                            showQuickAddTask \r\n                            ? AddTask() && setShowQuickAddTask(false)\r\n                            : AddTask()\r\n                        }\r\n                    >\r\n                        Add Task\r\n                    </button>\r\n                    {!showQuickAddTask && (\r\n                        <span\r\n                            className=\"add-task__cancel\"\r\n                            data-testid=\"add-task-main-cancel\"\r\n                            onClick={() => {\r\n                                setShowMain(false);\r\n                                setShowProjectOverlay(false);\r\n                            }}\r\n                            onKeyDown={() => {\r\n                                setShowMain(false);\r\n                                setShowProjectOverlay(false);\r\n                            }}\r\n                            tabIndex={0}\r\n                            role=\"button\"\r\n                            aria-label=\"Cancel adding a task\"\r\n                        >\r\n                            Cancel\r\n                        </span>\r\n                    )}\r\n                    <span\r\n                        className=\"add-task__project\"\r\n                        data-testid=\"show-project-overlay\"\r\n                        onClick={() => setShowProjectOverlay(!showProjectOverlay)}\r\n                        onKeyDown={() => setShowProjectOverlay(!showProjectOverlay)}\r\n                        tabIndex={0}\r\n                        role=\"button\"\r\n                    >\r\n                        <FaRegListAlt />\r\n                    </span>\r\n                    <span\r\n                        className=\"add-task__date\"\r\n                        data-tesid=\"show-task-date-overlay\"\r\n                        onClick={() => setShowTaskDate(!showTaskDate)}\r\n                        onKeyDown={() => setShowTaskDate(!showTaskDate)}\r\n                        tabIndex={0}\r\n                        role=\"button\"\r\n                    >\r\n                        <FaRegCalendarAlt />\r\n                    </span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nAddTask.propTypes = {\r\n    showAddTaskMain: PropTypes.bool,\r\n    shouldShowMain: PropTypes.bool,\r\n    showQuickAddTask: PropTypes.bool,\r\n    setShowQuickAddTask: PropTypes.func,\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { FaPizzaSlice } from 'react-icons/fa';\r\nimport { AddTask } from '../AddTask';\r\n\r\nexport const Header = ({ darkMode, setDarkMode }) => {\r\n    const [shouldShowMain, setShouldShowMain] = useState();\r\n    const [showQuickAddTask, setShowQuickAddTask] = useState();\r\n\r\n    return (\r\n    <header className=\"header\" data-testid=\"header\">\r\n        <nav>\r\n            <div className=\"logo\">\r\n                <img src=\"/images/logo.png\" alt=\"Todoist\" />\r\n            </div>\r\n            <div className=\"settings\">\r\n                <ul>\r\n                    <li className=\"settings__add\">\r\n                        <button \r\n                            aria-label=\"Quick Add Task\"\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                setShowQuickAddTask(true); \r\n                                setShouldShowMain(true);\r\n                            }}\r\n                            onKeyDown={() => {\r\n                                setShowQuickAddTask(true); \r\n                                setShouldShowMain(true);\r\n                            }}\r\n                            data-testid=\"quick-add-task-action\" \r\n                        >+</button>\r\n                    </li>\r\n                    <li className=\"settings_darkmode\">\r\n                        <button \r\n                            aria-label=\"Darkmode on/off\"\r\n                            type=\"button\"\r\n                            onClick={() => setDarkMode(!darkMode)}\r\n                            onKeyDown={() => setDarkMode(!darkMode)}\r\n                            data-testid=\"dark-mode-action\"\r\n                        >\r\n                            <FaPizzaSlice />\r\n                        </button>\r\n                        \r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n\r\n        <AddTask \r\n            showAddTaskMain={false}\r\n            shouldShowMain={shouldShowMain}\r\n            showQuickAddTask={showQuickAddTask}\r\n            setShowQuickAddTask={setShowQuickAddTask}\r\n        />\r\n    </header>\r\n    )\r\n};","import React, { useState } from 'react';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\nimport { useProjectsValue, useSelectedProjectValue } from '../context';\r\nimport {firebase} from '../firebase';\r\n\r\nexport const IndividualProject = ({ project }) => {\r\n    const [showConfirm, setShowConfirm] = useState(false);\r\n    const { projects, setProjects } = useProjectsValue();\r\n    const { setSelectedProject } = useSelectedProjectValue();\r\n\r\n    const deleteProject = docId => {\r\n        firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .doc(docId)\r\n            .delete()\r\n            .then(() => {\r\n                setProjects([...projects]);\r\n                setSelectedProject('INBOX');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <span className=\"sidebar__dot\">•</span>\r\n            <span className=\"sidebar__project-name\">{project.name}</span>\r\n            <span \r\n                className=\"sidebar__project-delete\" \r\n                data-testid=\"delete-project\" \r\n                onClick={()=> setShowConfirm(!showConfirm)}\r\n                onKeyDown={()=> setShowConfirm(!showConfirm)}\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                aria-label=\"Confirm deletion of project\"\r\n            >\r\n                <FaTrashAlt />\r\n                {showConfirm && (\r\n                    <div className=\"project-delete-modal\">\r\n                        <div className=\"project-delete-model__inner\">\r\n                            <p>Are you sure you want to delete this project?</p>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={()=> deleteProject(project.docId)}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                            <span \r\n                                onClick={() => setShowConfirm(!showConfirm)}\r\n                                onKeyDown={() => setShowConfirm(!showConfirm)}\r\n                                tabIndex={0}\r\n                                role=\"button\"\r\n                                aria-label=\"Cancel adding project, do not delete\"\r\n                            >\r\n                                Cancel\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nIndividualProject.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n};","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\r\nimport { IndividualProject } from './IndividualProject';\r\n \r\nexport const Projects = ({ activeValue = null }) => {\r\n    const [active, setActive] = useState(activeValue);\r\n    const { setSelectedProject } = useSelectedProjectValue();\r\n    const { projects } = useProjectsValue();\r\n\r\n\r\n    return (\r\n        projects && \r\n        projects.map(project => (\r\n            <li\r\n                key={project.projectId} \r\n                data-doc-id={project.docId} \r\n                data-testid=\"project-action-parent\"\r\n                className={\r\n                    active === project.projectId\r\n                        ? 'active sidebar__project'\r\n                        : 'sidebar__project'\r\n                }\r\n            >   \r\n            <div\r\n                role=\"button\" \r\n                data-testid=\"project-action\"\r\n                tabIndex={0}\r\n                aria-label={`Select ${project.name} as the task project`}\r\n                onClick={() => {\r\n                    setActive(project.projectId);\r\n                    setSelectedProject(project.projectId);\r\n                }}\r\n                onKeyDown={() => {\r\n                    setActive(project.projectId);\r\n                    setSelectedProject(project.projectId);\r\n                }}\r\n                data-testid=\"project-action\" \r\n            >\r\n                <IndividualProject project={project} />\r\n            </div>\r\n                \r\n            </li>\r\n        ))\r\n    );\r\n};\r\n\r\nProjects.propTypes = {\r\n    activeValue: PropTypes.bool,\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { firebase } from '../firebase';\r\nimport { generatePushId } from '../helpers';\r\nimport { useProjectsValue } from '../context';\r\n\r\nexport const AddProject = ({ shouldShow = false }) => {\r\n  const [show, setShow] = useState(shouldShow);\r\n  const [projectName, setProjectName] = useState('');\r\n\r\n  const projectId = generatePushId();\r\n  const { projects, setProjects } = useProjectsValue();\r\n\r\n  const addProject = () =>\r\n    projectName &&\r\n    firebase\r\n      .firestore()\r\n      .collection('projects')\r\n      .add({\r\n        projectId,\r\n        name: projectName,\r\n        userId: 'jlIFXIwyAL3tzHMtzRbw',\r\n      })\r\n      .then(() => {\r\n        setProjects([...projects]);\r\n        setProjectName('');\r\n        setShow(false);\r\n      });\r\n\r\n  return (\r\n    <div className=\"add-project\" data-testid=\"add-project\">\r\n      {show && (\r\n        <div className=\"add-project__input\" data-testid=\"add-project-inner\">\r\n          <input\r\n            value={projectName}\r\n            onChange={e => setProjectName(e.target.value)}\r\n            className=\"add-project__name\"\r\n            data-testid=\"project-name\"\r\n            type=\"text\"\r\n            placeholder=\"Name your project\"\r\n          />\r\n          <button\r\n            className=\"add-project__submit\"\r\n            type=\"button\"\r\n            onClick={() => addProject()}\r\n            data-testid=\"add-project-submit\"\r\n          >\r\n            Add Project\r\n          </button>\r\n          <span\r\n            aria-label=\"Cancel adding project\"\r\n            data-testid=\"hide-project-overlay\"\r\n            className=\"add-project__cancel\"\r\n            onClick={() => setShow(false)}\r\n            onKeyDown={() => setShow(false)}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            Cancel\r\n          </span>\r\n        </div>\r\n      )}\r\n      <span className=\"add-project__plus\">+</span>\r\n      <span\r\n        aria-label=\"Add Project\"\r\n        data-testid=\"add-project-action\"\r\n        className=\"add-project__text\"\r\n        onClick={() => setShow(!show)}\r\n        onKeyDown={() => setShow(!show)}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        Add Project\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddProject.propTypes = {\r\n  shouldShow: PropTypes.bool,\r\n};","import React, { useState } from 'react';\r\nimport { \r\n    FaChevronDown, \r\n    FaInbox, \r\n    FaRegCalendarAlt, \r\n    FaRegCalendar \r\n} from 'react-icons/fa';\r\nimport { Projects } from '../Projects';\r\nimport { useSelectedProjectValue } from '../../context';\r\nimport { AddProject } from '../AddProject';\r\n\r\nexport const Sidebar = () => {\r\n    const { setSelectedProject } = useSelectedProjectValue();\r\n    const [active, setActive] = useState('inbox');\r\n    const [showProjects, setShowProjects] = useState(true);\r\n\r\n    return (\r\n    <div className=\"sidebar\" data-testid=\"sidebar\">\r\n        <ul className=\"sidebar__genetic\">\r\n            <li \r\n                data-testid=\"inbox\"\r\n                className={active === 'inbox' ? 'active' : undefined}\r\n            >   \r\n                <div\r\n                    data-testid=\"inbox-action\"\r\n                    aria-label=\"Show inbox tasks\"\r\n                    tabIndex={0}\r\n                    role=\"button\"\r\n                    onClick={() => {\r\n                        setActive('inbox');\r\n                        setSelectedProject('INBOX');\r\n                    }}\r\n                    onKeyDown={() => {\r\n                        setActive('inbox');\r\n                        setSelectedProject('INBOX');\r\n                    }}\r\n                >\r\n                    \r\n                <span>\r\n                    <FaInbox />\r\n                </span>\r\n                <span>Inbox</span>\r\n                </div>\r\n            </li>\r\n            <li \r\n                data-testid=\"today\"\r\n                className={active === 'today' ? 'active' : undefined} \r\n            >   \r\n            <div\r\n                aria-label=\"Show Today's Tasks\"\r\n                data-testid=\"today-action\"\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                onClick={() => {\r\n                    setActive('today');\r\n                    setSelectedProject('TODAY');\r\n                }}\r\n                onKeyDown={() => {\r\n                    setActive('today');\r\n                    setSelectedProject('TODAY');\r\n                }}\r\n            >\r\n                <span>\r\n                    <FaRegCalendar />\r\n                </span>\r\n                <span>Today</span>\r\n            </div>\r\n            </li>\r\n            <li \r\n                data-testid=\"next_7\"\r\n                className={active === 'next_7' ? 'active' : undefined} \r\n            >\r\n                <div\r\n                    data-testid=\"next_7-action\"\r\n                    aria-label=\"Show tasks for the next 7 days\"\r\n                    tabIndex={0}\r\n                    role=\"button\"\r\n                    onClick={() => {\r\n                        setActive('next_7');\r\n                        setSelectedProject('NEXT_7');\r\n                    }}\r\n                    onKeyDown={() => {\r\n                        setActive('next_7');\r\n                        setSelectedProject('NEXT_7');\r\n                    }}\r\n                >\r\n                <span>\r\n                    <FaRegCalendarAlt />\r\n                </span>\r\n                <span>Next 7 days</span>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n            <div \r\n                aria-label=\"Show Hide/Projects\"\r\n                className=\"sidebar__middle\" \r\n                onClick={() => setShowProjects(!showProjects)}\r\n                onKeyDown={() => setShowProjects(!showProjects)}\r\n                role=\"button\" \r\n                tabIndex={0}\r\n            >\r\n            <span>\r\n                <FaChevronDown \r\n                    className={!showProjects \r\n                    ? 'hidden-projects'\r\n                    : undefined\r\n                    } \r\n                />\r\n            </span>\r\n            <h2>Projects</h2>\r\n        </div>\r\n\r\n        <ul className=\"sidebar__projects\">\r\n            {showProjects && <Projects />}\r\n        </ul>\r\n\r\n        {showProjects && <AddProject />}\r\n    </div>\r\n    );\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {firebase} from '../firebase';\r\n\r\nexport const Checkbox = ({ id, taskDesc }) => {\r\n    const archiveTask = () => {\r\n        firebase\r\n            .firestore()\r\n            .collection('tasks')\r\n            .doc(id)\r\n            .update({\r\n                archived: true,\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div \r\n            className=\"checkbox-holder\" \r\n            data-testid=\"checkbox-action\" \r\n            onClick={()=> archiveTask()}\r\n            onKeyDown={()=> archiveTask()}\r\n            aria-label={`Mark ${taskDesc} as done?`}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n        >\r\n            <span className=\"checkbox\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nCheckbox.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    taskDesc: PropTypes.string.isRequired,\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Checkbox } from '../components/Checkbox';\r\nimport { AddTask } from '../components/AddTask';\r\nimport { useTasks } from '../hooks';\r\nimport { collatedTasks } from '../constants';\r\nimport { getTitle, getCollatedTitle, collatedTasksExist } from '../helpers';\r\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\r\n\r\nexport const Tasks = () => {\r\n    const { selectedProject } = useSelectedProjectValue();\r\n    const { projects } = useProjectsValue();\r\n    const { tasks } = useTasks(selectedProject);\r\n\r\n    let projectName = '';\r\n\r\n    if (collatedTasksExist(selectedProject) && selectedProject) {\r\n        projectName = getCollatedTitle(collatedTasks, selectedProject).name;\r\n    }\r\n\r\n    if (\r\n        projects.length > 0 && \r\n        selectedProject && \r\n        !collatedTasksExist(selectedProject)\r\n    ) {\r\n        projectName = getTitle(projects, selectedProject).name;\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = `${projectName}: Todoist`;\r\n    });\r\n\r\n    return (\r\n        <div className=\"tasks\" data-testid=\"tasks\">\r\n            <h2 data-testid=\"project-name\">{projectName}</h2>\r\n\r\n            <ul className=\"tasks__list\">\r\n                {tasks.map(task => (\r\n                    <li key={`${task.id}`}>\r\n                        <Checkbox id={task.id} taskDesc={task.task} />\r\n                        <span>{task.task}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <AddTask />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { Tasks } from '../Tasks';\r\n\r\nexport const Content = () => (\r\n    <section className=\"content\">\r\n        <Sidebar />\r\n        <Tasks />\r\n    </section>\r\n);","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './App';\nimport './App.scss';\n\nrender(<App />, document.getElementById('root'));\n\n","import React, {useState} from 'react';\nimport { Header } from './components/layout/Header';\nimport { Content } from './components/layout/Content';\nimport { ProjectsProvider, SelectedProjectProvider } from './context';\n\n\nexport const App = ({ darkModeDefaul = false }) => {\n  const [darkMode, setDarkMode] = useState(darkModeDefaul);\n  \n  return (\n    <SelectedProjectProvider>\n      <ProjectsProvider>\n        <main \n          data-testid=\"application\"\n          className={darkMode ? 'darkmode' : undefined}\n        >\n          <Header \n            darkmode={darkMode} \n            setDarkMode={setDarkMode}\n          />\n          <Content />\n          </main>\n      </ProjectsProvider>\n    </SelectedProjectProvider>\n  )\n};\n\n"],"sourceRoot":""}